CCS PCM C Compiler, Version 4.130, 469               12-janv.-16 08:47

               Filename: U:\Mes Documents\Electronique\TP_Programmation\tp_test_afficheur_2\Affi_test_2.lst

               ROM used: 130 words (2%)
                         Largest free fragment is 2048
               RAM used: 21 (6%) at main() level
                         24 (7%) worst case
               Stack:    1 locations

*
0000:  MOVLW  00
0001:  MOVWF  0A
0002:  GOTO   02A
0003:  NOP
.................... #include <affectation_A_a_B.h> 
.................... #include <16F876A.h> 
.................... //////// Standard Header file for the PIC16F876A device //////////////// 
.................... #device PIC16F876A 
.................... #list 
....................  
.................... #device adc=16 
....................  
.................... #FUSES NOWDT                    //No Watch Dog Timer 
.................... #FUSES XT                       //Crystal osc <= 4mhz for PCM/PCH , 3mhz to 10 mhz for PCD 
.................... #FUSES NOBROWNOUT               //No brownout reset 
.................... #FUSES NOLVP                    //No low voltage prgming, B3(PIC16) or B5(PIC18) used for I/O 
....................  
.................... #use delay(clock=3276800) 
*
0015:  MOVLW  30
0016:  MOVWF  04
0017:  BCF    03.7
0018:  MOVF   00,W
0019:  BTFSC  03.2
001A:  GOTO   029
001B:  MOVLW  01
001C:  MOVWF  78
001D:  CLRF   77
001E:  DECFSZ 77,F
001F:  GOTO   01E
0020:  DECFSZ 78,F
0021:  GOTO   01D
0022:  MOVLW  0E
0023:  MOVWF  77
0024:  DECFSZ 77,F
0025:  GOTO   024
0026:  NOP
0027:  DECFSZ 00,F
0028:  GOTO   01B
0029:  RETURN
....................  
.................... #use STANDARD_IO( A,B ) 
.................... #use rs232(baud=9600,parity=N,xmit=PIN_C6,rcv=PIN_C7,bits=8,stream=PORT1) 
....................  
....................  
....................  
....................  
.................... int table[11]={192,249,164,176,153,146,131,248,128,144,127}; 
*
003D:  MOVLW  C0
003E:  BCF    03.5
003F:  MOVWF  20
0040:  MOVLW  F9
0041:  MOVWF  21
0042:  MOVLW  A4
0043:  MOVWF  22
0044:  MOVLW  B0
0045:  MOVWF  23
0046:  MOVLW  99
0047:  MOVWF  24
0048:  MOVLW  92
0049:  MOVWF  25
004A:  MOVLW  83
004B:  MOVWF  26
004C:  MOVLW  F8
004D:  MOVWF  27
004E:  MOVLW  80
004F:  MOVWF  28
0050:  MOVLW  90
0051:  MOVWF  29
0052:  MOVLW  7F
0053:  MOVWF  2A
.................... int unit, diz, cent, mill;  
.................... int tempo; 
....................  
.................... void affichage(int affi, int chiffre) 
.................... { 
.................... output_a(affi); 
*
0004:  BSF    03.5
0005:  CLRF   05
0006:  BCF    03.5
0007:  MOVF   30,W
0008:  MOVWF  05
.................... output_b(table[chiffre]); 
0009:  MOVLW  20
000A:  ADDWF  31,W
000B:  MOVWF  04
000C:  BCF    03.7
000D:  MOVF   00,W
000E:  MOVWF  32
000F:  BSF    03.5
0010:  CLRF   06
0011:  BCF    03.5
0012:  MOVF   32,W
0013:  MOVWF  06
.................... } 
0014:  RETURN
....................  
.................... void main() 
....................  
....................   { 
*
002A:  CLRF   04
002B:  BCF    03.7
002C:  MOVLW  1F
002D:  ANDWF  03,F
002E:  MOVLW  14
002F:  BSF    03.5
0030:  MOVWF  19
0031:  MOVLW  A6
0032:  MOVWF  18
0033:  MOVLW  90
0034:  BCF    03.5
0035:  MOVWF  18
0036:  BSF    03.5
0037:  BSF    1F.0
0038:  BSF    1F.1
0039:  BSF    1F.2
003A:  BCF    1F.3
003B:  MOVLW  07
003C:  MOVWF  1C
....................   port_b_pullups(0xFF); 
*
0054:  BSF    03.5
0055:  BCF    01.7
....................   tempo=5; 
0056:  MOVLW  05
0057:  BCF    03.5
0058:  MOVWF  2F
....................   while(TRUE) 
....................     { 
....................     unit=6; 
0059:  MOVLW  06
005A:  MOVWF  2B
....................     diz=3; 
005B:  MOVLW  03
005C:  MOVWF  2C
....................     cent=9; 
005D:  MOVLW  09
005E:  MOVWF  2D
....................     mill=0; 
005F:  CLRF   2E
....................     affichage(1,mill); 
0060:  MOVLW  01
0061:  MOVWF  30
0062:  MOVF   2E,W
0063:  MOVWF  31
0064:  CALL   004
....................     delay_ms(tempo); 
0065:  MOVF   2F,W
0066:  MOVWF  30
0067:  CALL   015
....................     affichage(2,cent); 
0068:  MOVLW  02
0069:  MOVWF  30
006A:  MOVF   2D,W
006B:  MOVWF  31
006C:  CALL   004
....................     delay_ms(tempo); 
006D:  MOVF   2F,W
006E:  MOVWF  30
006F:  CALL   015
....................     affichage(4,diz); 
0070:  MOVLW  04
0071:  MOVWF  30
0072:  MOVF   2C,W
0073:  MOVWF  31
0074:  CALL   004
....................     delay_ms(tempo); 
0075:  MOVF   2F,W
0076:  MOVWF  30
0077:  CALL   015
....................     affichage(8,unit); 
0078:  MOVLW  08
0079:  MOVWF  30
007A:  MOVF   2B,W
007B:  MOVWF  31
007C:  CALL   004
....................     delay_ms(tempo); 
007D:  MOVF   2F,W
007E:  MOVWF  30
007F:  CALL   015
....................     } 
0080:  GOTO   059
....................   } 
0081:  SLEEP

Configuration Fuses:
   Word  1: 3F31   XT NOWDT PUT NOBROWNOUT NOLVP NOCPD NOWRT NODEBUG NOPROTECT
