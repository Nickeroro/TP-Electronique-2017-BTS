CCS PCM C Compiler, Version 4.130, 469               15-oct.-15 09:21

               Filename: U:\Mes Documents\Electronique\tp_pic_c\Séance_2\PCW_Programmes\La_chenille_avec_2_bp\chenille_avec_2_bp.lst

               ROM used: 118 words (1%)
                         Largest free fragment is 2048
               RAM used: 7 (2%) at main() level
                         7 (2%) worst case
               Stack:    1 locations

*
0000:  MOVLW  00
0001:  MOVWF  0A
0002:  GOTO   019
0003:  NOP
.................... #include <chenille.h> 
.................... #include <16F876A.h> 
.................... //////// Standard Header file for the PIC16F876A device //////////////// 
.................... #device PIC16F876A 
.................... #list 
....................  
.................... #device adc=16 
....................  
.................... #FUSES NOWDT                    //No Watch Dog Timer 
.................... #FUSES XT                       //Crystal osc <= 4mhz for PCM/PCH , 3mhz to 10 mhz for PCD 
.................... #FUSES NOBROWNOUT               //No brownout reset 
.................... #FUSES NOLVP                    //No low voltage prgming, B3(PIC16) or B5(PIC18) used for I/O 
....................  
.................... #use delay(clock=3276800) 
0004:  MOVLW  21
0005:  MOVWF  04
0006:  BCF    03.7
0007:  MOVF   00,W
0008:  BTFSC  03.2
0009:  GOTO   018
000A:  MOVLW  01
000B:  MOVWF  78
000C:  CLRF   77
000D:  DECFSZ 77,F
000E:  GOTO   00D
000F:  DECFSZ 78,F
0010:  GOTO   00C
0011:  MOVLW  0E
0012:  MOVWF  77
0013:  DECFSZ 77,F
0014:  GOTO   013
0015:  NOP
0016:  DECFSZ 00,F
0017:  GOTO   00A
0018:  RETURN
....................  
.................... #use STANDARD_IO( A,B ) 
.................... #use rs232(baud=9600,parity=N,xmit=PIN_C6,rcv=PIN_C7,bits=8,stream=PORT1) 
....................  
....................  
.................... int led=0; 
.................... void main() 
.................... { 
0019:  CLRF   04
001A:  BCF    03.7
001B:  MOVLW  1F
001C:  ANDWF  03,F
001D:  MOVLW  14
001E:  BSF    03.5
001F:  MOVWF  19
0020:  MOVLW  A6
0021:  MOVWF  18
0022:  MOVLW  90
0023:  BCF    03.5
0024:  MOVWF  18
0025:  CLRF   20
0026:  BSF    03.5
0027:  BSF    1F.0
0028:  BSF    1F.1
0029:  BSF    1F.2
002A:  BCF    1F.3
002B:  MOVLW  07
002C:  MOVWF  1C
....................    port_B_pullups(0xFF); 
002D:  BCF    01.7
....................       While (true) 
....................    { 
....................  
....................              //   led = 0x01; 
....................       if (input_A () == 0x00) 
002E:  MOVLW  FF
002F:  MOVWF  05
0030:  BCF    03.5
0031:  MOVF   05,F
0032:  BTFSS  03.2
0033:  GOTO   03B
....................              { 
....................              led = 0x01; 
0034:  MOVLW  01
0035:  MOVWF  20
....................                 { 
....................                 Output_b(led); 
0036:  BSF    03.5
0037:  CLRF   06
0038:  BCF    03.5
0039:  MOVF   20,W
003A:  MOVWF  06
....................                 } 
....................              } 
....................         
....................        if (input_A () == 0x01) 
003B:  MOVLW  FF
003C:  BSF    03.5
003D:  MOVWF  05
003E:  BCF    03.5
003F:  DECFSZ 05,W
0040:  GOTO   056
....................        { 
....................           
....................           led = 0x01;      
0041:  MOVLW  01
0042:  MOVWF  20
....................           while (led <= 0x20) 
....................                { 
0043:  MOVF   20,W
0044:  SUBLW  20
0045:  BTFSS  03.0
0046:  GOTO   056
....................                Output_b(led); 
0047:  BSF    03.5
0048:  CLRF   06
0049:  BCF    03.5
004A:  MOVF   20,W
004B:  MOVWF  06
....................                delay_ms (250); 
004C:  MOVLW  FA
004D:  MOVWF  21
004E:  CALL   004
....................                Output_b(0x00); 
004F:  BSF    03.5
0050:  CLRF   06
0051:  BCF    03.5
0052:  CLRF   06
....................                delay_ms (0); 
....................                led=led*2; 
0053:  BCF    03.0
0054:  RLF    20,F
....................                } 
0055:  GOTO   043
....................        } 
....................        if (input_A () == 0x02) 
0056:  MOVLW  FF
0057:  BSF    03.5
0058:  MOVWF  05
0059:  BCF    03.5
005A:  MOVF   05,W
005B:  SUBLW  02
005C:  BTFSS  03.2
005D:  GOTO   073
....................        { 
....................           led = 0x20; 
005E:  MOVLW  20
005F:  MOVWF  20
....................           while (led >= 0x01) 
....................                { 
0060:  MOVF   20,W
0061:  SUBLW  00
0062:  BTFSC  03.0
0063:  GOTO   073
....................                Output_b(led); 
0064:  BSF    03.5
0065:  CLRF   06
0066:  BCF    03.5
0067:  MOVF   20,W
0068:  MOVWF  06
....................                delay_ms (250); 
0069:  MOVLW  FA
006A:  MOVWF  21
006B:  CALL   004
....................                Output_b(0x00); 
006C:  BSF    03.5
006D:  CLRF   06
006E:  BCF    03.5
006F:  CLRF   06
....................                delay_ms (0); 
....................                led=led/2;        
0070:  BCF    03.0
0071:  RRF    20,F
....................                } 
0072:  GOTO   060
....................        } 
....................    } 
0073:  BSF    03.5
0074:  GOTO   02E
....................  } 
....................  
0075:  SLEEP

Configuration Fuses:
   Word  1: 3F31   XT NOWDT PUT NOBROWNOUT NOLVP NOCPD NOWRT NODEBUG NOPROTECT
