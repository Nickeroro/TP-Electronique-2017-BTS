CCS PCM C Compiler, Version 4.130, 469               15-oct.-15 08:48

               Filename: U:\Mes Documents\Electronique\tp_pic_c\Séance_2\PCW_Programmes\La_chenille_avec_bp\chenille_avec_bp.lst

               ROM used: 107 words (1%)
                         Largest free fragment is 2048
               RAM used: 7 (2%) at main() level
                         7 (2%) worst case
               Stack:    1 locations

*
0000:  MOVLW  00
0001:  MOVWF  0A
0002:  GOTO   019
0003:  NOP
.................... #include <chenille.h> 
.................... #include <16F876A.h> 
.................... //////// Standard Header file for the PIC16F876A device //////////////// 
.................... #device PIC16F876A 
.................... #list 
....................  
.................... #device adc=16 
....................  
.................... #FUSES NOWDT                    //No Watch Dog Timer 
.................... #FUSES XT                       //Crystal osc <= 4mhz for PCM/PCH , 3mhz to 10 mhz for PCD 
.................... #FUSES NOBROWNOUT               //No brownout reset 
.................... #FUSES NOLVP                    //No low voltage prgming, B3(PIC16) or B5(PIC18) used for I/O 
....................  
.................... #use delay(clock=3276800) 
0004:  MOVLW  21
0005:  MOVWF  04
0006:  BCF    03.7
0007:  MOVF   00,W
0008:  BTFSC  03.2
0009:  GOTO   018
000A:  MOVLW  01
000B:  MOVWF  78
000C:  CLRF   77
000D:  DECFSZ 77,F
000E:  GOTO   00D
000F:  DECFSZ 78,F
0010:  GOTO   00C
0011:  MOVLW  0E
0012:  MOVWF  77
0013:  DECFSZ 77,F
0014:  GOTO   013
0015:  NOP
0016:  DECFSZ 00,F
0017:  GOTO   00A
0018:  RETURN
....................  
.................... #use STANDARD_IO( A,B ) 
.................... #use rs232(baud=9600,parity=N,xmit=PIN_C6,rcv=PIN_C7,bits=8,stream=PORT1) 
....................  
....................  
.................... int led; 
.................... void main() 
.................... { 
0019:  CLRF   04
001A:  BCF    03.7
001B:  MOVLW  1F
001C:  ANDWF  03,F
001D:  MOVLW  14
001E:  BSF    03.5
001F:  MOVWF  19
0020:  MOVLW  A6
0021:  MOVWF  18
0022:  MOVLW  90
0023:  BCF    03.5
0024:  MOVWF  18
0025:  BSF    03.5
0026:  BSF    1F.0
0027:  BSF    1F.1
0028:  BSF    1F.2
0029:  BCF    1F.3
002A:  MOVLW  07
002B:  MOVWF  1C
....................    port_B_pullups(0xFF); 
002C:  BCF    01.7
....................       While (true) 
....................    { 
.................... led = 0x01; 
002D:  MOVLW  01
002E:  BCF    03.5
002F:  MOVWF  20
....................         
....................        If (input_A () == 0x01) 
0030:  MOVLW  FF
0031:  BSF    03.5
0032:  MOVWF  05
0033:  BCF    03.5
0034:  DECFSZ 05,W
0035:  GOTO   05C
....................         {  
....................                 while (led <= 0x20)//led<5 
....................                { 
0036:  MOVF   20,W
0037:  SUBLW  20
0038:  BTFSS  03.0
0039:  GOTO   049
....................                Output_b(led); 
003A:  BSF    03.5
003B:  CLRF   06
003C:  BCF    03.5
003D:  MOVF   20,W
003E:  MOVWF  06
....................                delay_ms (250); 
003F:  MOVLW  FA
0040:  MOVWF  21
0041:  CALL   004
....................                Output_b(0x00); 
0042:  BSF    03.5
0043:  CLRF   06
0044:  BCF    03.5
0045:  CLRF   06
....................                delay_ms (0); 
....................                led=led*2; 
0046:  BCF    03.0
0047:  RLF    20,F
....................                } 
0048:  GOTO   036
....................                 while (led > 0x01)//led>1 
....................                { 
0049:  MOVF   20,W
004A:  SUBLW  01
004B:  BTFSC  03.0
004C:  GOTO   05C
....................                Output_b(led); 
004D:  BSF    03.5
004E:  CLRF   06
004F:  BCF    03.5
0050:  MOVF   20,W
0051:  MOVWF  06
....................                delay_ms (250); 
0052:  MOVLW  FA
0053:  MOVWF  21
0054:  CALL   004
....................                Output_b(0x00); 
0055:  BSF    03.5
0056:  CLRF   06
0057:  BCF    03.5
0058:  CLRF   06
....................                delay_ms (0); 
....................                led=led/2; 
0059:  BCF    03.0
005A:  RRF    20,F
....................                } 
005B:  GOTO   049
....................         } 
....................        if (input_A () == 0x00) 
005C:  MOVLW  FF
005D:  BSF    03.5
005E:  MOVWF  05
005F:  BCF    03.5
0060:  MOVF   05,F
0061:  BTFSS  03.2
0062:  GOTO   068
....................         { 
....................         Output_b(led); 
0063:  BSF    03.5
0064:  CLRF   06
0065:  BCF    03.5
0066:  MOVF   20,W
0067:  MOVWF  06
....................         } 
....................    } 
0068:  BSF    03.5
0069:  GOTO   02D
....................  } 
....................  
006A:  SLEEP

Configuration Fuses:
   Word  1: 3F31   XT NOWDT PUT NOBROWNOUT NOLVP NOCPD NOWRT NODEBUG NOPROTECT
