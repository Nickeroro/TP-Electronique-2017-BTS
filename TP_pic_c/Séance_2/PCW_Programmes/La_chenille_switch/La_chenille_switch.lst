CCS PCM C Compiler, Version 4.130, 469               05-nov.-15 10:15

               Filename: U:\Mes Documents\Electronique\tp_pic_c\Séance_2\PCW_Programmes\La_chenille_switch\La_chenille_switch.lst

               ROM used: 121 words (1%)
                         Largest free fragment is 2048
               RAM used: 8 (2%) at main() level
                         8 (2%) worst case
               Stack:    2 locations

*
0000:  MOVLW  00
0001:  MOVWF  0A
0002:  GOTO   049
0003:  NOP
.................... #include <chenille.h> 
.................... #include <16F876A.h> 
.................... //////// Standard Header file for the PIC16F876A device //////////////// 
.................... #device PIC16F876A 
.................... #list 
....................  
.................... #device adc=16 
....................  
.................... #FUSES NOWDT                    //No Watch Dog Timer 
.................... #FUSES XT                       //Crystal osc <= 4mhz for PCM/PCH , 3mhz to 10 mhz for PCD 
.................... #FUSES NOBROWNOUT               //No brownout reset 
.................... #FUSES NOLVP                    //No low voltage prgming, B3(PIC16) or B5(PIC18) used for I/O 
....................  
.................... #use delay(clock=3276800) 
0004:  MOVLW  22
0005:  MOVWF  04
0006:  BCF    03.7
0007:  MOVF   00,W
0008:  BTFSC  03.2
0009:  GOTO   018
000A:  MOVLW  01
000B:  MOVWF  78
000C:  CLRF   77
000D:  DECFSZ 77,F
000E:  GOTO   00D
000F:  DECFSZ 78,F
0010:  GOTO   00C
0011:  MOVLW  0E
0012:  MOVWF  77
0013:  DECFSZ 77,F
0014:  GOTO   013
0015:  NOP
0016:  DECFSZ 00,F
0017:  GOTO   00A
0018:  RETURN
....................  
.................... #use STANDARD_IO( B ) 
.................... #use rs232(baud=9600,parity=N,xmit=PIN_C6,rcv=PIN_C7,bits=8,stream=PORT1) 
....................  
....................  
.................... int led=0; 
.................... int lecture_A=8; 
.................... Void sens_droit() 
.................... { 
....................           led = 0x01; 
0019:  MOVLW  01
001A:  MOVWF  20
....................           while (led <= 0x20) 
....................                { 
001B:  MOVF   20,W
001C:  SUBLW  20
001D:  BTFSS  03.0
001E:  GOTO   02E
....................                Output_b(led); 
001F:  BSF    03.5
0020:  CLRF   06
0021:  BCF    03.5
0022:  MOVF   20,W
0023:  MOVWF  06
....................                delay_ms (250); 
0024:  MOVLW  FA
0025:  MOVWF  22
0026:  CALL   004
....................                Output_b(0x00); 
0027:  BSF    03.5
0028:  CLRF   06
0029:  BCF    03.5
002A:  CLRF   06
....................                delay_ms (0); 
....................                led=led*2; 
002B:  BCF    03.0
002C:  RLF    20,F
....................                }    
002D:  GOTO   01B
.................... } 
002E:  BCF    0A.3
002F:  BCF    0A.4
0030:  GOTO   076 (RETURN)
....................  
.................... Void sens_gauche() 
.................... { 
....................           led = 0x20; 
0031:  MOVLW  20
0032:  MOVWF  20
....................           while (led >= 0x01) 
....................                { 
0033:  MOVF   20,W
0034:  SUBLW  00
0035:  BTFSC  03.0
0036:  GOTO   046
....................                Output_b(led); 
0037:  BSF    03.5
0038:  CLRF   06
0039:  BCF    03.5
003A:  MOVF   20,W
003B:  MOVWF  06
....................                delay_ms (250); 
003C:  MOVLW  FA
003D:  MOVWF  22
003E:  CALL   004
....................                Output_b(0x00); 
003F:  BSF    03.5
0040:  CLRF   06
0041:  BCF    03.5
0042:  CLRF   06
....................                delay_ms (0); 
....................                led=led/2;        
0043:  BCF    03.0
0044:  RRF    20,F
....................                } 
0045:  GOTO   033
.................... } 
0046:  BCF    0A.3
0047:  BCF    0A.4
0048:  GOTO   076 (RETURN)
....................  
....................  
.................... void main() 
.................... { 
0049:  CLRF   04
004A:  BCF    03.7
004B:  MOVLW  1F
004C:  ANDWF  03,F
004D:  MOVLW  14
004E:  BSF    03.5
004F:  MOVWF  19
0050:  MOVLW  A6
0051:  MOVWF  18
0052:  MOVLW  90
0053:  BCF    03.5
0054:  MOVWF  18
0055:  CLRF   20
0056:  MOVLW  08
0057:  MOVWF  21
0058:  BSF    03.5
0059:  BSF    1F.0
005A:  BSF    1F.1
005B:  BSF    1F.2
005C:  BCF    1F.3
005D:  MOVLW  07
005E:  MOVWF  1C
....................    port_B_pullups(0xFF); 
005F:  BCF    01.7
....................       While (true) 
....................    { 
....................        lecture_A=input_A() & 0x03;// lecture clavier 
0060:  MOVLW  FF
0061:  MOVWF  05
0062:  BCF    03.5
0063:  MOVF   05,W
0064:  ANDLW  03
0065:  MOVWF  21
....................        switch (lecture_A) 
....................             { 
0066:  MOVF   21,W
0067:  BTFSC  03.2
0068:  GOTO   070
0069:  XORLW  01
006A:  BTFSC  03.2
006B:  GOTO   073
006C:  XORLW  03
006D:  BTFSC  03.2
006E:  GOTO   075
006F:  GOTO   076
....................        case 0x00:led=0x01; 
0070:  MOVLW  01
0071:  MOVWF  20
....................        break; 
0072:  GOTO   076
....................        case 0x01:sens_droit (); 
0073:  GOTO   019
....................        break; 
0074:  GOTO   076
....................        case 0x02:sens_gauche(); 
0075:  GOTO   031
....................             } 
....................    } 
0076:  BSF    03.5
0077:  GOTO   060
....................  } 
....................  
0078:  SLEEP

Configuration Fuses:
   Word  1: 3F31   XT NOWDT PUT NOBROWNOUT NOLVP NOCPD NOWRT NODEBUG NOPROTECT
